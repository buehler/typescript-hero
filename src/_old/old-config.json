{
  "configuration": {
    "typescriptHero.codeCompletion.completionSortMode": {
      "enum": [
        "default",
        "bottom"
      ],
      "default": "default",
      "description": "Defines the sortmode of the code completion in intellisense (bottom means sorted to bottom).",
      "scope": "resource"
    },
    "typescriptHero.resolver.insertSpaceBeforeAndAfterImportBraces": {
      "type": "boolean",
      "default": true,
      "description": "Defines if there should be a space inside the curly braces of an import statement.",
      "scope": "resource"
    },
    "typescriptHero.resolver.insertSemicolons": {
      "type": "boolean",
      "default": true,
      "description": "Defines if there should be a semicolon at the end of a statement.",
      "scope": "resource"
    },
    "typescriptHero.resolver.stringQuoteStyle": {
      "enum": [
        "'",
        "\""
      ],
      "default": "'",
      "description": "Defines if single or double quotes should be used.",
      "scope": "resource"
    },
    "typescriptHero.resolver.workspaceIgnorePatterns": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "uniqueItems": true,
      "default": [
        "**/build/**/*",
        "**/out/**/*",
        "**/dist/**/*"
      ],
      "description": "Defines partial pathes (globs) that are ignored during indexing of the **workspace** (e.g. 'node_modules/**/*' would exclude all modules).",
      "scope": "resource"
    },
    "typescriptHero.resolver.moduleIgnorePatterns": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "uniqueItems": true,
      "default": [
        "**/node_modules/**/*"
      ],
      "description": "Defines partial pathes (globs) that are ignored during indexing of the **node_modules**. This patterns are attached to the node_module/<name> of each found module.",
      "scope": "resource"
    },
    "typescriptHero.resolver.multiLineWrapThreshold": {
      "type": "number",
      "minimum": 1,
      "multipleOf": 1,
      "default": 125,
      "description": "Defines the threshold when an import should be wrapped into a multiline import.",
      "scope": "resource"
    },
    "typescriptHero.resolver.multiLineTrailingComma": {
      "type": "boolean",
      "default": true,
      "description": "Defined if multi line imports contain the last trailing comma.",
      "scope": "resource"
    },
    "typescriptHero.resolver.disableImportsSorting": {
      "type": "boolean",
      "default": false,
      "description": "Defines if sorting is disable during organize imports.",
      "scope": "resource"
    },
    "typescriptHero.resolver.disableImportRemovalOnOrganize": {
      "type": "boolean",
      "default": false,
      "description": "Defines, if removal unsed imports is obligatory during organize imports"
    },
    "typescriptHero.resolver.organizeOnSave": {
      "type": "boolean",
      "default": false,
      "description": "Defines if the imports should be organized on save.",
      "scope": "resource"
    },
    "typescriptHero.resolver.organizeSortsByFirstSpecifier": {
      "type": "boolean",
      "default": false,
      "description": "Defines if the imports are organized by first specifier/alias instead of module path.",
      "scope": "resource"
    },
    "typescriptHero.resolver.ignoreImportsForOrganize": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "uniqueItems": true,
      "default": [
        "react"
      ],
      "description": "Defines imports (libraries, so the 'from' part), which are not removed during 'organize imports'.",
      "scope": "resource"
    },
    "typescriptHero.resolver.importGroups": {
      "type": "array",
      "items": {
        "anyOf": [
          {
            "enum": [
              "Modules",
              "Plains",
              "Workspace",
              "Remaining"
            ]
          },
          {
            "type": "string",
            "pattern": "\\/[A-Za-z-_0-9]+\\/"
          },
          {
            "type": "object",
            "properties": {
              "identifier": {
                "enum": [
                  "Modules",
                  "Plains",
                  "Workspace",
                  "Remaining"
                ]
              },
              "order": {
                "enum": [
                  "asc",
                  "desc"
                ]
              }
            },
            "additionalProperties": false,
            "required": [
              "identifier",
              "order"
            ]
          },
          {
            "type": "object",
            "properties": {
              "identifier": {
                "type": "string",
                "pattern": "\\/[A-Za-z-_0-9]+\\/"
              },
              "order": {
                "enum": [
                  "asc",
                  "desc"
                ]
              }
            },
            "additionalProperties": false,
            "required": [
              "identifier",
              "order"
            ]
          }
        ]
      },
      "default": [
        "Plains",
        "Modules",
        "Workspace"
      ],
      "description": "Defines the groups of the imports ordering. Multiple groups possible, see readme for instructions.",
      "scope": "resource"
    },
    "typescriptHero.resolver.resolverMode": {
      "enum": [
        "TypeScript",
        "ES6",
        "Both"
      ],
      "default": "Both",
      "description": "Defines the mode of the symbol resolver. (Note that JavaScript mode only indexes workspace files)",
      "scope": "resource"
    },
    "typescriptHero.resolver.promptForSpecifiers": {
      "type": "boolean",
      "default": true,
      "description": "Defines if typescript hero should ask the user for default specifiers or duplicate specifier aliases.",
      "scope": "window"
    }
  },
  "commands": [
    {
      "command": "typescriptHero.resolve.addImport",
      "title": "TS Hero: Add an import to current file"
    },
    {
      "command": "typescriptHero.resolve.addImportUnderCursor",
      "title": "TS Hero: Adds the current symbol under the cursor as an import to current file"
    },
    {
      "command": "typescriptHero.resolve.addMissingImports",
      "title": "TS Hero: Adds all missing imports for the open document"
    },
    {
      "command": "typescriptHero.resolve.organizeImports",
      "title": "TS Hero: Organize imports (sort and remove unused)"
    },
    {
      "command": "typescriptHero.resolve.rebuildCache",
      "title": "TS Hero: Rebuild the resolver cache"
    },
    {
      "command": "typescriptHero.codeFix.executeCodeAction",
      "title": "TS Hero (internal): Execute a code action"
    },
    {
      "command": "typescriptHero.codeCompletion.executeIntellisenseItem",
      "title": "TS Hero (internal): Execute the command for a intellisense item"
    },
    {
      "command": "typescriptHero.documentCodeOutline.gotoNode",
      "title": "TS Hero (internal): Jump to the given nodes location"
    }
  ],
  "keybindings": [
    {
      "command": "typescriptHero.resolve.addImport",
      "key": "ctrl+shift+i",
      "when": "editorTextFocus"
    },
    {
      "command": "typescriptHero.resolve.addImportUnderCursor",
      "key": "ctrl+alt+i",
      "when": "editorTextFocus"
    },
    {
      "command": "typescriptHero.resolve.addMissingImports",
      "key": "ctrl+alt+shift+i",
      "when": "editorTextFocus"
    },
    {
      "command": "typescriptHero.resolve.organizeImports",
      "key": "ctrl+alt+o",
      "when": "editorTextFocus"
    }
  ]
}
