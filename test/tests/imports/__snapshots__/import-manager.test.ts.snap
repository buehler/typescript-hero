// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ImportManager Typescript Constructor (via provider) should add an import proxy for a default import 1`] = `
Array [
  NamedImport {
    "defaultAlias": "myDefaultExportedFunction",
    "end": 84,
    "libraryName": "../defaultExport/lateDefaultExportedElement",
    "specifiers": Array [],
    "start": 0,
  },
]
`;

exports[`ImportManager Typescript Constructor (via provider) should add an import proxy for a named import 1`] = `
Array [
  NamedImport {
    "end": 43,
    "libraryName": "../server/indices",
    "specifiers": Array [
      SymbolSpecifier {
        "alias": undefined,
        "specifier": "Class1",
      },
    ],
    "start": 0,
  },
]
`;

exports[`ImportManager Typescript Constructor (via provider) should add multiple import proxies 1`] = `
Array [
  NamedImport {
    "defaultAlias": "myDefaultExportedFunction",
    "end": 84,
    "libraryName": "../defaultExport/lateDefaultExportedElement",
    "specifiers": Array [],
    "start": 0,
  },
  NamedImport {
    "end": 128,
    "libraryName": "../server/indices",
    "specifiers": Array [
      SymbolSpecifier {
        "alias": undefined,
        "specifier": "Class1",
      },
    ],
    "start": 85,
  },
]
`;

exports[`ImportManager Typescript Constructor (via provider) should not add a proxy for a namespace import 1`] = `
Array [
  NamespaceImport {
    "alias": "bodyParser",
    "end": 42,
    "libraryName": "body-parser",
    "start": 0,
  },
]
`;

exports[`ImportManager Typescript Constructor (via provider) should not add a proxy for a string import 1`] = `
Array [
  StringImport {
    "end": 21,
    "libraryName": "body-parser",
    "start": 0,
  },
]
`;

exports[`ImportManager Typescript Constructor (via provider) should not add a proxy for an external import 1`] = `
Array [
  ExternalModuleImport {
    "alias": "bodyParser",
    "end": 43,
    "libraryName": "body-parser",
    "start": 0,
  },
]
`;

exports[`ImportManager Typescript addDeclarationImport() should add a default import to the import index. 1`] = `
Array [
  NamedImport {
    "defaultAlias": undefined,
    "end": 43,
    "libraryName": "../server/indices",
    "specifiers": Array [
      SymbolSpecifier {
        "alias": undefined,
        "specifier": "Class1",
      },
    ],
    "start": 0,
  },
  NamedImport {
    "defaultAlias": "defaultdeclaration",
    "end": undefined,
    "libraryName": "../lib",
    "specifiers": Array [],
    "start": undefined,
  },
]
`;

exports[`ImportManager Typescript addDeclarationImport() should add a module import to the import index 1`] = `
Array [
  NamedImport {
    "defaultAlias": undefined,
    "end": 43,
    "libraryName": "../server/indices",
    "specifiers": Array [
      SymbolSpecifier {
        "alias": undefined,
        "specifier": "Class1",
      },
    ],
    "start": 0,
  },
  NamespaceImport {
    "alias": "module",
    "end": undefined,
    "libraryName": "my-module",
    "start": undefined,
  },
]
`;

exports[`ImportManager Typescript addDeclarationImport() should add a normal import to a group 1`] = `
KeywordImportGroup {
  "imports": Array [
    NamedImport {
      "defaultAlias": undefined,
      "end": 43,
      "libraryName": "../server/indices",
      "specifiers": Array [
        SymbolSpecifier {
          "alias": undefined,
          "specifier": "Class1",
        },
      ],
      "start": 0,
    },
  ],
  "keyword": 2,
  "order": "asc",
}
`;

exports[`ImportManager Typescript addDeclarationImport() should add a normal import to a group 2`] = `
KeywordImportGroup {
  "imports": Array [
    NamedImport {
      "defaultAlias": undefined,
      "end": 43,
      "libraryName": "../server/indices",
      "specifiers": Array [
        SymbolSpecifier {
          "alias": undefined,
          "specifier": "Class1",
        },
      ],
      "start": 0,
    },
    NamedImport {
      "end": undefined,
      "libraryName": "../lib",
      "specifiers": Array [
        SymbolSpecifier {
          "alias": undefined,
          "specifier": "class",
        },
      ],
      "start": undefined,
    },
  ],
  "keyword": 2,
  "order": "asc",
}
`;

exports[`ImportManager Typescript addDeclarationImport() should add a normal import to the document 1`] = `
Array [
  NamedImport {
    "defaultAlias": undefined,
    "end": 43,
    "libraryName": "../server/indices",
    "specifiers": Array [
      SymbolSpecifier {
        "alias": undefined,
        "specifier": "Class1",
      },
    ],
    "start": 0,
  },
  NamedImport {
    "end": undefined,
    "libraryName": "../lib",
    "specifiers": Array [
      SymbolSpecifier {
        "alias": undefined,
        "specifier": "classdeclaration",
      },
    ],
    "start": undefined,
  },
]
`;

exports[`ImportManager Typescript addDeclarationImport() should add an import to an existing import group 1`] = `
KeywordImportGroup {
  "imports": Array [
    NamedImport {
      "defaultAlias": undefined,
      "end": 43,
      "libraryName": "../server/indices",
      "specifiers": Array [
        SymbolSpecifier {
          "alias": undefined,
          "specifier": "Class1",
        },
      ],
      "start": 0,
    },
  ],
  "keyword": 2,
  "order": "asc",
}
`;

exports[`ImportManager Typescript addDeclarationImport() should add an import to an existing import group 2`] = `
KeywordImportGroup {
  "imports": Array [
    NamedImport {
      "defaultAlias": undefined,
      "end": 43,
      "libraryName": "../server/indices",
      "specifiers": Array [
        SymbolSpecifier {
          "alias": undefined,
          "specifier": "Class1",
        },
      ],
      "start": 0,
    },
    NamedImport {
      "end": undefined,
      "libraryName": "../lib1",
      "specifiers": Array [
        SymbolSpecifier {
          "alias": undefined,
          "specifier": "class",
        },
      ],
      "start": undefined,
    },
    NamedImport {
      "end": undefined,
      "libraryName": "../lib1",
      "specifiers": Array [
        SymbolSpecifier {
          "alias": undefined,
          "specifier": "class2",
        },
      ],
      "start": undefined,
    },
  ],
  "keyword": 2,
  "order": "asc",
}
`;

exports[`ImportManager Typescript addDeclarationImport() should add an import to an existing import index item 1`] = `
Array [
  NamedImport {
    "defaultAlias": undefined,
    "end": 43,
    "libraryName": "../server/indices",
    "specifiers": Array [
      SymbolSpecifier {
        "alias": undefined,
        "specifier": "Class1",
      },
    ],
    "start": 0,
  },
  NamedImport {
    "end": undefined,
    "libraryName": "../lib1",
    "specifiers": Array [
      SymbolSpecifier {
        "alias": undefined,
        "specifier": "class1",
      },
    ],
    "start": undefined,
  },
  NamedImport {
    "end": undefined,
    "libraryName": "../lib1",
    "specifiers": Array [
      SymbolSpecifier {
        "alias": undefined,
        "specifier": "class2",
      },
    ],
    "start": undefined,
  },
]
`;

exports[`ImportManager Typescript addDeclarationImport() should add multiple imports to the import index 1`] = `
Array [
  NamedImport {
    "defaultAlias": undefined,
    "end": 43,
    "libraryName": "../server/indices",
    "specifiers": Array [
      SymbolSpecifier {
        "alias": undefined,
        "specifier": "Class1",
      },
    ],
    "start": 0,
  },
  NamedImport {
    "end": undefined,
    "libraryName": "../lib1",
    "specifiers": Array [
      SymbolSpecifier {
        "alias": undefined,
        "specifier": "class1",
      },
    ],
    "start": undefined,
  },
  NamedImport {
    "end": undefined,
    "libraryName": "../lib2",
    "specifiers": Array [
      SymbolSpecifier {
        "alias": undefined,
        "specifier": "class2",
      },
    ],
    "start": undefined,
  },
]
`;

exports[`ImportManager Typescript addDeclarationImport() should not add the same specifier twice 1`] = `
Array [
  NamedImport {
    "defaultAlias": undefined,
    "end": 43,
    "libraryName": "../server/indices",
    "specifiers": Array [
      SymbolSpecifier {
        "alias": undefined,
        "specifier": "Class1",
      },
    ],
    "start": 0,
  },
  NamedImport {
    "end": undefined,
    "libraryName": "../lib",
    "specifiers": Array [
      SymbolSpecifier {
        "alias": undefined,
        "specifier": "class",
      },
    ],
    "start": undefined,
  },
]
`;

exports[`ImportManager Typescript addDeclarationImport() should not add the same specifier twice 2`] = `
Array [
  NamedImport {
    "defaultAlias": undefined,
    "end": 43,
    "libraryName": "../server/indices",
    "specifiers": Array [
      SymbolSpecifier {
        "alias": undefined,
        "specifier": "Class1",
      },
    ],
    "start": 0,
  },
  NamedImport {
    "end": undefined,
    "libraryName": "../lib",
    "specifiers": Array [
      SymbolSpecifier {
        "alias": undefined,
        "specifier": "class",
      },
    ],
    "start": undefined,
  },
  NamedImport {
    "end": undefined,
    "libraryName": "../lib",
    "specifiers": Array [
      SymbolSpecifier {
        "alias": undefined,
        "specifier": "class",
      },
    ],
    "start": undefined,
  },
]
`;

exports[`ImportManager Typescript commit() should add a single default import to the document top 1`] = `"import defaultDeclaration from '../lib';"`;

exports[`ImportManager Typescript commit() should add a single new import to the document top 1`] = `"import { importedclass } from '../imp';"`;

exports[`ImportManager Typescript commit() should add a single new module import to the document top 1`] = `"import * as newModule from 'new-module';"`;

exports[`ImportManager Typescript commit() should add a specifier to an existing import 1`] = `"import { Class1, class2 } from '../server/indices';"`;

exports[`ImportManager Typescript commit() should add a specifier to an import and a new import 1`] = `
"import { class3 } from '../server/not-indices';
import { Class1, class2 } from '../server/indices';
"
`;

exports[`ImportManager Typescript commit() should add a specifier with a default (first) and a normal (second) import to the doc 1`] = `"import defaultExport, { defaultClass } from '../lib';"`;

exports[`ImportManager Typescript commit() should add multiple specifier to an existing import 1`] = `"import { Class1, class2, class3 } from '../server/indices';"`;

exports[`ImportManager Typescript commit() should add three new imports to the document top 1`] = `
"import { newClass } from '../lib';
import { secondnewClass } from '../not-same-lib';
import { thirdnewClass } from '../not-same-lib-again';
"
`;

exports[`ImportManager Typescript commit() should add two new imports to the document top 1`] = `
"import { newClass } from '../lib';
import { secondnewClass } from '../not-same-lib';
"
`;

exports[`ImportManager Typescript commit() should convert a default import when a normal specifier is added 1`] = `"import defaultExport, { Class1 } from '../server/indices';"`;

exports[`ImportManager Typescript commit() should convert a default import when a normal specifier is added 2`] = `"import defaultExport, { Class1, defaultClass } from '../server/indices';"`;

exports[`ImportManager Typescript commit() should convert a normal import when a default specifier is added 1`] = `"import { Class1, defaultClass } from '../server/indices';"`;

exports[`ImportManager Typescript commit() should convert a normal import when a default specifier is added 2`] = `"import defaultExport, { Class1, defaultClass } from '../server/indices';"`;

exports[`ImportManager Typescript commit() should render sorted imports when optimizing 1`] = `
"import { Class1 } from '../server/indices';
import { MultiExportClass } from '../server/indices/defaultExport/multiExport';
"
`;

exports[`ImportManager Typescript commit() should render sorted specifiers when optimizing 1`] = `"import { Class1, Class2 } from '../server/indices';"`;

exports[`ImportManager Typescript commit() should render the optimized import 1`] = `
"import { SomeOtherClass } from '../server/not-indices';
import { Class1, Class2 } from '../server/indices';
"
`;

exports[`ImportManager Typescript commit() should render the optimized import 2`] = `
"import { Class1, Class2 } from '../server/indices';

"
`;
